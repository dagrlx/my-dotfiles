# ~/config/nix-darwin/home/func_zsh

function brew() {
    command brew "$@"  # Ejecuta el comando brew original

    # Actualizar el widget si el comando afecta el estado de los paquetes
    if [[ "$1" == "outdated" || "$1" == "upgrade" || "$1" == "update" || "$*" =~ "--cask" || "$*" =~ "--greedy" ]]; then
        sketchybar --trigger brew_update
    fi
}
# function brew() {
#   command brew "$@"
#   if [[ $* =~ "upgrade" ]] || [[ $* =~ "update" ]] || [[ $* =~ "outdated" ]]; then
#     sketchybar --trigger brew_update
#   fi
# }
#
# nvt() {
#   nvim $(fzf -m --preview='bat --style=numbers --color=always {}')
# }

function open_fzf() {
    nvim $(fzf -m --preview="bat --style=numbers --color=always {}")
}


function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# This script was automatically generated by the broot program
# More information can be found in https://github.com/Canop/broot
# This function starts broot and executes the command
# it produces, if any.
# It's needed because some shell commands, like `cd`,
# have no useful effect if executed in a subshell.
function br {
    local cmd cmd_file code
    cmd_file=$(mktemp)
    if broot --outcmd "$cmd_file" "$@"; then
        cmd=$(<"$cmd_file")
        command rm -f "$cmd_file"
        eval "$cmd"
    else
        code=$?
        command rm -f "$cmd_file"
        return "$code"
    fi
}

function nug() {
    export TERM=xterm-ghostty
    if [[ -n "$GHOSTTY_RESOURCES_DIR" ]]; then
        source "$GHOSTTY_RESOURCES_DIR/shell-integration/zsh/ghostty-integration"
    fi
    exec nu -l
}

# Función para correr just en nix-darwin desde cualquier lado
function j() {
  local dir="$HOME/.config/nix-darwin"
  if [[ -d "$dir" ]]; then
    cd "$dir" || { echo "Error: no se pudo entrar a $dir"; return 1; }
    command just "$@"
  else
    echo "Error: no se encontró el directorio $dir"
    return 1
  fi
}
